#!/usr/bin/env python
import rospy
from kobuki_msgs.msg import KeyboardInput

try:
    import apiai
except ImportError:
    sys.path.append(os.path.join(os.path.dirname(os.path.realpath(__file__)), os.pardir))
    import apiai

import os
import threading
import thread
import pyaudio
import time
import ast

#ROS key map
KeyCode_Right = 67
KeyCode_Left = 68
KeyCode_Up = 65
KeyCode_Down = 66
KeyCode_Space = 32
KeyCode_Enable = 101
KeyCode_Disable = 100


CHUNK = 512
FORMAT = pyaudio.paInt16
CHANNELS = 1
RATE = 44100
RECORD_SECONDS = 2

CLIENT_ACCESS_TOKEN = '7c4551dc1d9845618e1426665c93c989'
SUBSCRIPTION_KEY = '0122ce8ac2f7463ab2a1befb8966fe56' 

def s2t():
    resampler = apiai.Resampler(source_samplerate=RATE)

    vad = apiai.VAD()

    ai = apiai.ApiAI(CLIENT_ACCESS_TOKEN, SUBSCRIPTION_KEY)

    request = ai.voice_request()

    request.lang = 'en' # optional, default value equal 'en'

    def callback(in_data, frame_count, time_info, status):
        frames, data = resampler.resample(in_data, frame_count)
        state = vad.processFrame(frames)
        request.send(data)

        if (state == 1):
            return in_data, pyaudio.paContinue
        else:
            return in_data, pyaudio.paComplete

    p = pyaudio.PyAudio()

    stream = p.open(format=FORMAT,
                    channels=CHANNELS, 
                    rate=RATE, 
                    input=True,
                    output=False,
                    frames_per_buffer=CHUNK,
                    stream_callback=callback)

    stream.start_stream()

    print ("Say!")

    try:
        while stream.is_active():
            time.sleep(0.1)
    except Exception:
        raise e
    except KeyboardInterrupt:
        pass

    stream.stop_stream()
    stream.close()
    p.terminate()

    print ("Wait for response...")
    response = request.getresponse()
    
    res = response.read()
    resDict = ast.literal_eval(res)
    print resDict["result"]['resolvedQuery']
    #print (response.read())

    return resDict["result"]['resolvedQuery']

from pykeyboard import PyKeyboard

def publishViaCmd(key):
    os.system("rostopic pub -1 /keyop/teleop kobuki_msgs/KeyboardInput " + str(key))

def publishViaCode(key, publisher):
	


def t2k(txt, publish=publishViaCmd):
    print "the text is ", txt
    k = PyKeyboard();
    if 'straight' in txt or 'str' in txt:
        print "straight"
        publish(KeyCode_Up)
        # k.press_key(k.up_key)
        # k.release_key(k.up_key)
        # thread.start_new_thread(publish,(KeyCode_Up,))
        print "aaa"
    if "ba" in txt:
        print "back"
        publish(KeyCode_Down)
        # k.press_key(k.down_key)
        # k.release_key(k.down_key)
        # os.system("rostopic pub -1 /keyop/teleop kobuki_msgs/KeyboardInput " + str(KeyCode_Down))
        # thread.start_new_thread(publish,(KeyCode_Down,))
    if "le" in txt:
        print "left"
        k.press_key(k.left_key)
        k.release_key(k.left_key)
    if "ri" in txt:
        print "right"
        k.press_key(k.right_key)
        k.release_key(k.right_key)




text = s2t()
t2k(text)






